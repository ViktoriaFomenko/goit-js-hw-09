{"mappings":"YAAA,IAMuBA,EAAUC,EANpBC,SAASC,cAAc,QACjBD,SAASE,kBAAkB,SAC5BF,SAASE,kBAAkB,QAC9BF,SAASG,uBAAuB,UACnCH,SAASG,uBAAuB,WAErBL,EAcT,EAdmBC,EAchB,KAbR,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,uBAAwCM,OAAfb,EAAS,QAAYa,OAANZ,EAAM,OAGtDO,EAAK,sBAAuCK,OAAfb,EAAS,QAAYa,OAANZ,EAAM,cAMvDa,MAAK,SAAAC,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MACjBe,QAAQC,IAAI,uBAAwCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,UAE3DiB,OAAM,SAAAH,G,IAAGf,EAAQe,EAARf,SAAUC,EAAKc,EAALd,MAClBe,QAAQC,IAAI,sBAAqCJ,OAAfb,EAAS,QAAYa,OAANZ,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('form');\nconst firstDelay = document.getElementsByName('delay');\nconst delayStep = document.getElementsByName('step');\nconst amount = document.getElementsByClassName('amount');\nconst btn = document.getElementsByClassName('button');\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n  });\n};\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["position","delay","document","querySelector","getElementsByName","getElementsByClassName","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","concat","then","param","console","log","catch"],"version":3,"file":"03-promises.75a9c4e2.js.map"}