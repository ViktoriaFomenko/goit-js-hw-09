{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,QAExC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA2BPL,EAASY,iBAAiB,UAvBTC,IACfA,EAAMC,iBAEN,MAAMC,EAAW,IAAIC,SAAShB,GACxBiB,EAAQC,SAASH,EAASI,IAAI,UAC9BC,EAAOF,SAASH,EAASI,IAAI,SAC7BE,EAASH,SAASH,EAASI,IAAI,WAErC,IAAK,IAAIG,EAAW,EAAGA,EAAWD,EAAQC,IAAY,CAGpDnB,EAAcmB,EAAW,EAFJL,EAAQG,EAAOE,GAGjCC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBP,EAAA0B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,OAC9CD,KAERsB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBP,EAAA0B,OAAOG,QAAQ,sBAAoBvB,QAAeC,OAC3CD","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formElem = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n\n  const formData = new FormData(formElem);\n  const delay = parseInt(formData.get('delay'));\n  const step = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let position = 0; position < amount; position++) {\n    const promiseDelay = delay + step * position;\n\n    createPromise(position + 1, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        return position;\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        return position;\n      });\n  }\n};\n\nformElem.addEventListener('submit', onSubmit);\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","formData","FormData","delay1","parseInt","get","step","amount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.44b31356.js.map"}